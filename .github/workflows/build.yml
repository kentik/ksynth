name: build

on:
  push:
    branches: "*"
    tags: "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build:
    runs-on: ${{ matrix.builder }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            builder: ubuntu-latest
            cross: true
          - target: x86_64-apple-darwin
            builder: macos-latest
            cross: false
          - target: aarch64-unknown-linux-musl
            builder: ubuntu-latest
            cross: true
          - target: armv7-unknown-linux-musleabihf
            builder: ubuntu-latest
            cross: true
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: beta
          target: ${{ matrix.target }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker/build-push-action@v1
        with:
          dockerfile: .github/workflows/Dockerfile.${{ matrix.target }}
          registry: local
          repository: cross
          tags: ${{ matrix.target }}
          push: false
        env:
          DOCKER_BUILDKIT: 1
        if: ${{ matrix.cross }}
      - run: brew install capnp
        if: ${{ startsWith(matrix.builder, 'macos') }}
      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: synag-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/synag

  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create.outputs.upload_url }}
    steps:
      - id: create
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: build
    if: startsWith(github.ref, 'refs/tags')

  assets:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
          - target: aarch64-unknown-linux-musl
          - target: armv7-unknown-linux-musleabihf
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: synag-${{ matrix.target }}
      - run: "file *"
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: synag
          asset_name: synag-${{ matrix.target }}
          asset_content_type: application/binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: release
